[package]
name = "shriven-q"
version = "0.1.0"
edition = "2024"
rust-version = "1.85"
authors = ["Praveen <praveen686@gmail.com>"]
description = "Ultra-low latency quantitative trading platform with GPU acceleration"
license = "MIT"
repository = "https://github.com/praveen686/shriven_q.git"
homepage = "https://github.com/praveen686/shriven_q"
documentation = "https://github.com/praveen686/shriven_q/docs"
keywords = ["trading", "quantitative", "gpu", "low-latency", "finance"]
categories = ["finance", "algorithms", "science", "concurrency"]
readme = "README.md"

# [workspace]
# members = [
#     "shriven-core",
#     "shriven-gpu", 
#     "shriven-engines",
#     "shriven-analytics",
#     "shriven-infrastructure",
#     "shriven-interfaces",
#     "shriven-connectors",
#     "shriven-testing",
# ]

[dependencies]
# Performance-critical dependencies
tokio = { version = "1.35", features = ["full", "tracing"] }
crossbeam = "0.8"
parking_lot = "0.12"
ahash = "0.8"
rustc-hash = "2.0"
smallvec = { version = "1.11", features = ["serde"] }
arrayvec = "0.7"
once_cell = "1.19"

# Async and networking  
tonic = "0.14"
prost = "0.14"
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
tokio-tungstenite = { version = "0.21", features = ["rustls-tls-native-roots"] }
tower = { version = "0.5", features = ["full"] }

# Serialization and data
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
rmp-serde = "1.1"

# Error handling and logging
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Numerical computing
nalgebra = "0.32"
ndarray = "0.15"
statrs = "0.16"
rand = "0.8"
rand_distr = "0.4"

# Time and dates  
chrono = { version = "0.4", features = ["serde"] }
time = "0.3"

# Development tools (optional)
regex = { version = "1.10", optional = true }

# Configuration
config = "0.13"
toml = "0.8"
clap = { version = "4.4", features = ["derive"] }

# Database and storage
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid"] }
redis = { version = "0.27", features = ["tokio-comp", "connection-manager"] }

# System integration
libc = "0.2"

# GPU computing (optional)
cudarc = { version = "0.10", optional = true }

# High-performance allocators (optional)
mimalloc = { version = "0.1", optional = true }
jemalloc = { version = "0.5", package = "tikv-jemalloc-ctl", optional = true }

# Development and testing (optional)
criterion = { version = "0.5", features = ["html_reports"], optional = true }
quickcheck = { version = "1.0", optional = true }
quickcheck_macros = { version = "1.0", optional = true }
proptest = { version = "1.4", optional = true }

[features]
default = ["zerodha-integration"]  # Safe by default

# Performance features
hft-unsafe = []  # Opt-in for unsafe high-performance memory allocators
high-performance = ["mimalloc", "jemalloc"]
gpu-acceleration = ["cudarc"]
simd = []

# Exchange integrations
zerodha-integration = []
binance-integration = []
bybit-integration = []

# Execution modes
backtesting = []
simulation = []
paper-trading = []
live-trading = []

# Development features  
development-tools = ["regex"]
profiling = ["criterion"]
testing = ["quickcheck", "proptest"]

[[bin]]
name = "shriven-q"
path = "src/main.rs"

[[bin]]
name = "shriven-backtest"
path = "src/bin/backtest.rs"
required-features = ["backtesting"]

[[bin]]
name = "shriven-benchmark"
path = "src/bin/benchmark.rs"
required-features = ["profiling"]

[[bin]]
name = "doc-tracker"
path = "src/bin/doc_tracker.rs"
required-features = ["development-tools"]

[profile.release]
opt-level = 3
debug = false
strip = true
lto = "fat"
codegen-units = 1
panic = "abort"

[profile.release-with-debug]
inherits = "release"
debug = true
strip = false

[profile.bench]
opt-level = 3
debug = false
lto = true
codegen-units = 1

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

# GPU-optimized profile
[profile.gpu]
inherits = "release"
opt-level = 3
debug = false
lto = "fat"
codegen-units = 1

# Workspace-level lint configuration
[lints.rust]
# Be strict, but overridable in modules
unsafe_code = "deny"        # Default to safe Rust
missing_docs = "allow"      # Too noisy globally, enable per-module
unused = { level = "warn", priority = -1 }

[lints.clippy]
# Sane defaults globally  
all = { level = "warn", priority = -1 }                # Good baseline lints
pedantic = { level = "allow", priority = -1 }          # Opt-in per module (too strict for global)
nursery = { level = "allow", priority = -1 }           # Experimental lints, opt-in only
restriction = { level = "allow", priority = -1 }       # NEVER enable globally; cherry-pick individual lints

# Cherry-picked individual lints we actually want
expect_used = "deny"        # Use proper error handling
unwrap_used = "deny"        # Use proper error handling

# Style preferences
module_name_repetitions = "allow"  # Common in domain modeling
must_use_candidate = "allow"       # Too noisy
missing_safety_doc = "deny"        # Critical for unsafe code
missing_errors_doc = "allow"       # Too noisy globally
missing_panics_doc = "allow"       # Too noisy globally

# Allow common patterns
mod_module_files = "allow"         # mod.rs is fine
unreadable_literal = "allow"       # Style preference for number separators
